{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/Component/post/ArticleList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './ArticleList.css';\nimport { fetchPosts, fetchPostDetails, fetchUserDetails, fetchCategoryDetails } from '../../Services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestNews = ({\n  fetchUrl\n}) => {\n  _s();\n  const {\n    categoryId\n  } = useParams();\n  const location = useLocation();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tl, setPageTitle] = useState(\"\");\n  useEffect(() => {\n    const loadPosts = async () => {\n      let url;\n      try {\n        if (location.pathname === \"/latest\") {\n          url = `${fetchUrl}/posts/`;\n          setPageTitle(\"Latest Posts\");\n          const data = await fetchPosts();\n          const postsWithAuthors = await Promise.all(data.map(async post => {\n            const userData = await fetchUserDetails(post.user);\n            post.banner_path = `${fetchUrl}${post.banner_path}`;\n            return {\n              ...post,\n              authorName: userData.username\n            };\n          }));\n          setLatestPosts(postsWithAuthors);\n        } else if (categoryId) {\n          url = `${fetchUrl}${categoryId}/posts/`;\n          const categoryData = await fetchCategoryDetails(categoryId);\n          setPageTitle(`${categoryData.name} Posts`);\n          const data = await fetchPosts();\n          const postsWithAuthors = await Promise.all(data.map(async post => {\n            const userData = await fetchUserDetails(post.user);\n            post.banner_path = `${fetchUrl}${post.banner_path}`;\n            return {\n              ...post,\n              authorName: userData.username\n            };\n          }));\n          setLatestPosts(postsWithAuthors.slice(0, 8)); // Set the first 8 posts directly\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    loadPosts();\n  }, [fetchUrl, categoryId, location.pathname]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"latest-news-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"thelatest\",\n        children: tl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: latestPosts.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latestp\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Latestc\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ArticeList-p\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: article.banner_path,\n                alt: article.title,\n                className: \"card-img-top latestimg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"text ArticleList-t\",\n                    href: `/articles/${article.id}`,\n                    children: article.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"latest-author\",\n                  children: [\"Author: \", article.authorName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"latestptext\",\n                  children: truncateText(article.short_description, 50)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"categories\",\n                  children: article.categories.map(category => category.name).join(', ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to truncate text to a specific number of words\n_s(LatestNews, \"7JlXFZafRdC2/Vr43dFMQpxk4bM=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = LatestNews;\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\nexport default LatestNews;\nvar _c;\n$RefreshReg$(_c, \"LatestNews\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","fetchPosts","fetchPostDetails","fetchUserDetails","fetchCategoryDetails","jsxDEV","_jsxDEV","LatestNews","fetchUrl","_s","categoryId","location","latestPosts","setLatestPosts","loading","setLoading","error","setError","tl","setPageTitle","loadPosts","url","pathname","data","postsWithAuthors","Promise","all","map","post","userData","user","banner_path","authorName","username","categoryData","name","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","article","src","alt","title","href","id","truncateText","short_description","categories","category","join","_c","text","maxWords","words","split","length","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/Component/post/ArticleList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './ArticleList.css';\nimport { fetchPosts, fetchPostDetails, fetchUserDetails, fetchCategoryDetails } from '../../Services/apiService';\n\nconst LatestNews = ({ fetchUrl }) => {\n  const { categoryId } = useParams();\n  const location = useLocation();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [tl, setPageTitle] = useState(\"\");\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      let url;\n      try {\n        if (location.pathname === \"/latest\") {\n          url = `${fetchUrl}/posts/`;\n          setPageTitle(\"Latest Posts\");\n\n          const data = await fetchPosts();\n          const postsWithAuthors = await Promise.all(data.map(async (post) => {\n            const userData = await fetchUserDetails(post.user);\n            post.banner_path = `${fetchUrl}${post.banner_path}`; \n            return { ...post, authorName: userData.username };\n          }));\n          setLatestPosts(postsWithAuthors);\n        } else if (categoryId) {\n          url = `${fetchUrl}${categoryId}/posts/`;\n          const categoryData = await fetchCategoryDetails(categoryId);\n          setPageTitle(`${categoryData.name} Posts`);\n\n          const data = await fetchPosts();\n          const postsWithAuthors = await Promise.all(data.map(async (post) => {\n            const userData = await fetchUserDetails(post.user);\n            post.banner_path = `${fetchUrl}${post.banner_path}`; \n            return { ...post, authorName: userData.username };\n          }));\n          setLatestPosts(postsWithAuthors.slice(0, 8)); // Set the first 8 posts directly\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    loadPosts();\n  }, [fetchUrl, categoryId, location.pathname]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error.message}</p>;\n\n  return (\n    <section className=\"latest-news-page\">\n      <div className=\"container\">\n        <h1 className='thelatest'>{tl}</h1>\n        <div className=\"row\">\n          {latestPosts.map((article) => (\n            <div key={article.id} className=\"latestp\">\n              <div className=\"Latestc\">\n                <div className='ArticeList-p'>\n                  <img src={article.banner_path} alt={article.title} className=\"card-img-top latestimg\" />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      <a className='text ArticleList-t' href={`/articles/${article.id}`}>{article.title}</a>\n                    </h5>\n                    <p className=\"latest-author\">Author: {article.authorName}</p>\n                    <p className=\"latestptext\">{truncateText(article.short_description, 50)}</p>\n                    <div className=\"categories\">\n                      {article.categories.map(category => category.name).join(', ')}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// Function to truncate text to a specific number of words\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\n\nexport default LatestNews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}