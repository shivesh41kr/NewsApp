{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/Components/latest/latest.jsx\",\n  _s = $RefreshSig$();\n// LatestNews.js\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './latest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestNews = ({\n  fetchUrl\n}) => {\n  _s();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(`${fetchUrl}/posts/`).then(response => response.json()).then(data => {\n      if (Array.isArray(data.posts)) {\n        // Map through each post to fetch additional author details\n        const postsWithAuthors = data.posts.map(async post => {\n          const userResponse = await fetch(`apis/users/${post.user}/`);\n          const userData = await userResponse.json();\n          return {\n            ...post,\n            user: userData.username\n          }; // Replace user ID with username\n        });\n        Promise.all(postsWithAuthors).then(postsWithAuthorsData => {\n          setLatestPosts(postsWithAuthorsData.slice(0, 8)); // Set the first 8 posts directly\n          setLoading(false);\n        });\n      } else {\n        throw new Error(\"Invalid data format\");\n      }\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, [fetchUrl]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"latest-news-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"thelatest\",\n        children: \"The Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: latestPosts.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latestp\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Latestc\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.banner_path,\n              alt: article.title,\n              className: \"card-img-top latestimg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"text\",\n                  href: `/articles/${article.id}`,\n                  children: article.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"latest-author\",\n                children: [\"Author: \", article.authorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"latestptext\",\n                children: truncateText(article.short_description, 50)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to truncate text to a specific number of words\n_s(LatestNews, \"I+TBau6Do6Zhg0S2AV2a4Mm3uIs=\");\n_c = LatestNews;\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\nexport default LatestNews;\nvar _c;\n$RefreshReg$(_c, \"LatestNews\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LatestNews","fetchUrl","_s","latestPosts","setLatestPosts","loading","setLoading","error","setError","fetch","then","response","json","data","Array","isArray","posts","postsWithAuthors","map","post","userResponse","user","userData","username","Promise","all","postsWithAuthorsData","slice","Error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","article","src","banner_path","alt","title","href","id","authorName","truncateText","short_description","_c","text","maxWords","words","split","length","join","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/Components/latest/latest.jsx"],"sourcesContent":["// LatestNews.js\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './latest.css';\n\nconst LatestNews = ({ fetchUrl }) => {\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(`${fetchUrl}/posts/`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (Array.isArray(data.posts)) {\n          // Map through each post to fetch additional author details\n          const postsWithAuthors = data.posts.map(async (post) => {\n            const userResponse = await fetch(`apis/users/${post.user}/`);\n            const userData = await userResponse.json();\n            return { ...post, user: userData.username }; // Replace user ID with username\n          });\n          Promise.all(postsWithAuthors).then((postsWithAuthorsData) => {\n            setLatestPosts(postsWithAuthorsData.slice(0, 8)); // Set the first 8 posts directly\n            setLoading(false);\n          });\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n      })\n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n  }, [fetchUrl]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error.message}</p>;\n\n  return (\n    <section className=\"latest-news-page\">\n      <div className=\"container\">\n        <h1 className='thelatest'>The Latest</h1>\n        <div className=\"row\">\n          {latestPosts.map((article) => (\n            <div key={article.id} className=\"latestp\">\n              <div className=\"Latestc\">\n                <img src={article.banner_path} alt={article.title} className=\"card-img-top latestimg\" />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    <a className='text' href={`/articles/${article.id}`}>{article.title}</a>\n                  </h5>\n                  <p className=\"latest-author\">Author: {article.authorName}</p>\n                  <p className=\"latestptext\">{truncateText(article.short_description, 50)}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// Function to truncate text to a specific number of words\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\n\nexport default LatestNews;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,GAAGR,QAAQ,SAAS,CAAC,CACxBS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,KAAK,CAAC,EAAE;QAC7B;QACA,MAAMC,gBAAgB,GAAGJ,IAAI,CAACG,KAAK,CAACE,GAAG,CAAC,MAAOC,IAAI,IAAK;UACtD,MAAMC,YAAY,GAAG,MAAMX,KAAK,CAAC,cAAcU,IAAI,CAACE,IAAI,GAAG,CAAC;UAC5D,MAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACR,IAAI,CAAC,CAAC;UAC1C,OAAO;YAAE,GAAGO,IAAI;YAAEE,IAAI,EAAEC,QAAQ,CAACC;UAAS,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACR,gBAAgB,CAAC,CAACP,IAAI,CAAEgB,oBAAoB,IAAK;UAC3DtB,cAAc,CAACsB,oBAAoB,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UAClDrB,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAM,IAAIsB,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,CAAC,CACDC,KAAK,CAAEtB,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAA+B,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAI3B,KAAK,EAAE,oBAAOR,OAAA;IAAA+B,QAAA,GAAG,0BAAwB,EAACvB,KAAK,CAAC4B,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEhE,oBACEnC,OAAA;IAASqC,SAAS,EAAC,kBAAkB;IAAAN,QAAA,eACnC/B,OAAA;MAAKqC,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACxB/B,OAAA;QAAIqC,SAAS,EAAC,WAAW;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCnC,OAAA;QAAKqC,SAAS,EAAC,KAAK;QAAAN,QAAA,EACjB3B,WAAW,CAACe,GAAG,CAAEmB,OAAO,iBACvBtC,OAAA;UAAsBqC,SAAS,EAAC,SAAS;UAAAN,QAAA,eACvC/B,OAAA;YAAKqC,SAAS,EAAC,SAAS;YAAAN,QAAA,gBACtB/B,OAAA;cAAKuC,GAAG,EAAED,OAAO,CAACE,WAAY;cAACC,GAAG,EAAEH,OAAO,CAACI,KAAM;cAACL,SAAS,EAAC;YAAwB;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxFnC,OAAA;cAAKqC,SAAS,EAAC,WAAW;cAAAN,QAAA,gBACxB/B,OAAA;gBAAIqC,SAAS,EAAC,YAAY;gBAAAN,QAAA,eACxB/B,OAAA;kBAAGqC,SAAS,EAAC,MAAM;kBAACM,IAAI,EAAE,aAAaL,OAAO,CAACM,EAAE,EAAG;kBAAAb,QAAA,EAAEO,OAAO,CAACI;gBAAK;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtE,CAAC,eACLnC,OAAA;gBAAGqC,SAAS,EAAC,eAAe;gBAAAN,QAAA,GAAC,UAAQ,EAACO,OAAO,CAACO,UAAU;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7DnC,OAAA;gBAAGqC,SAAS,EAAC,aAAa;gBAAAN,QAAA,EAAEe,YAAY,CAACR,OAAO,CAACS,iBAAiB,EAAE,EAAE;cAAC;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAVEG,OAAO,CAACM,EAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;;AAED;AAAAhC,EAAA,CA1DMF,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AA2DhB,SAAS6C,YAAYA,CAACG,IAAI,EAAEC,QAAQ,EAAE;EACpC,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EAC7B,IAAID,KAAK,CAACE,MAAM,GAAGH,QAAQ,EAAE;IAC3B,OAAOC,KAAK,CAACvB,KAAK,CAAC,CAAC,EAAEsB,QAAQ,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK;EACnD;EACA,OAAOL,IAAI;AACb;AAEA,eAAehD,UAAU;AAAC,IAAA+C,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}