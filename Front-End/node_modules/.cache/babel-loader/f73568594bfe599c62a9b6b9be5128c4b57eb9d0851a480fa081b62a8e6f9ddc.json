{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/home_page/forYou/forYou.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport './forYou.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForYou = () => {\n  _s();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/apis/posts/').then(response => response.json()).then(async data => {\n      if (Array.isArray(data)) {\n        const postsWithDetails = await Promise.all(data.slice(0, 2).map(async post => {\n          const userResponse = await fetch(`http://127.0.0.1:8000/apis/users/${post.user}/`);\n          const userData = await userResponse.json();\n          const categoryResponses = await Promise.all(post.categories.map(async categoryId => {\n            const categoryResponse = await fetch(`http://127.0.0.1:8000/apis/categories/${categoryId}/`);\n            return categoryResponse.json();\n          }));\n          const categories = categoryResponses.map(category => ({\n            id: category.id,\n            name: category.name\n          }));\n          return {\n            ...post,\n            authorName: userData.username,\n            categories\n          };\n        }));\n        setLatestPosts(postsWithDetails);\n      } else {\n        throw new Error(\"Invalid data format\");\n      }\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"forYou\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container Gcon\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caforYourow\",\n        children: latestPosts.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CardFoyYou\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.banner_path,\n              alt: article.title,\n              className: \"card-img-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"foryou-categories\",\n              children: article.categories.map(category => /*#__PURE__*/_jsxDEV(Link, {\n                href: `/category/${category.id}/posts`,\n                className: \"category-link\",\n                children: category.name\n              }, category.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"foryoutext\",\n                  href: `/articles/${article.id}`,\n                  children: article.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"forYoutext\",\n                children: truncateText(article.short_description, 5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"foryou-author\",\n                children: article.authorName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to truncate text to a specific number of words\n_s(ForYou, \"I+TBau6Do6Zhg0S2AV2a4Mm3uIs=\");\n_c = ForYou;\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\nexport default ForYou;\nvar _c;\n$RefreshReg$(_c, \"ForYou\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","ForYou","_s","latestPosts","setLatestPosts","loading","setLoading","error","setError","fetch","then","response","json","data","Array","isArray","postsWithDetails","Promise","all","slice","map","post","userResponse","user","userData","categoryResponses","categories","categoryId","categoryResponse","category","id","name","authorName","username","Error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","article","src","banner_path","alt","title","href","truncateText","short_description","_c","text","maxWords","words","split","length","join","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/home_page/forYou/forYou.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport './forYou.css';\n\nconst ForYou = () => {\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/apis/posts/')\n      .then((response) => response.json())\n      .then(async (data) => {\n        if (Array.isArray(data)) {\n          const postsWithDetails = await Promise.all(\n            data.slice(0, 2).map(async (post) => {\n              const userResponse = await fetch(`http://127.0.0.1:8000/apis/users/${post.user}/`);\n              const userData = await userResponse.json();\n\n              const categoryResponses = await Promise.all(\n                post.categories.map(async (categoryId) => {\n                  const categoryResponse = await fetch(`http://127.0.0.1:8000/apis/categories/${categoryId}/`);\n                  return categoryResponse.json();\n                })\n              );\n\n              const categories = categoryResponses.map(category => ({\n                id: category.id,\n                name: category.name\n              }));\n\n              return { ...post, authorName: userData.username, categories };\n            })\n          );\n          setLatestPosts(postsWithDetails);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error.message}</p>;\n\n  return (\n    <section className=\"forYou\">\n      <div className=\"container Gcon\">\n        <div className=\"caforYourow\">\n          {latestPosts.map((article) => (\n            <div key={article.id} className=\"col-md-12 mb-4\">\n              <div className=\"CardFoyYou\">\n                <img src={article.banner_path} alt={article.title} className=\"card-img-top\" />\n                <div className=\"foryou-categories\">\n                    {article.categories.map(category => (\n                      <Link key={category.id} href={`/category/${category.id}/posts`}  className=\"category-link\">\n                        {category.name}\n                      </Link>\n                    ))}\n                  </div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    <h2 className='foryoutext' href={`/articles/${article.id}`}>{article.title}</h2>\n                  </h5>\n                  \n                  <p className=\"forYoutext\">{truncateText(article.short_description, 5)}</p>\n                  <p className=\"foryou-author\">{article.authorName}</p>\n                 \n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// Function to truncate text to a specific number of words\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\n\nexport default ForYou;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}