{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/Component/grid/LatestGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport './LatestGrid.css';\nimport { fetchCategoryDetails, fetchUserDetails } from '../../Services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestGrid = () => {\n  _s();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/apis/posts/');\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          const postsWithDetails = await Promise.all(data.slice(0, 3).map(async post => {\n            const userData = await fetchUserDetails(post.user);\n            const categoryResponses = await Promise.all(post.categories.map(categoryId => fetchCategoryDetails(categoryId)));\n            const categories = categoryResponses.map(category => ({\n              id: category.id,\n              name: category.name\n            }));\n            return {\n              ...post,\n              authorName: userData.username,\n              categories\n            };\n          }));\n          setLatestPosts(postsWithDetails);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    loadPosts();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"forYou\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container Glat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"gridhead\",\n        children: \"Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forYourow\",\n        children: latestPosts.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gridbd\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 mb-4 \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"CardLatestGrid\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"foryoutitle\",\n                    href: `/articles/${article.id}`,\n                    children: article.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"forYoutext\",\n                  children: truncateText(article.short_description, 18)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"foryou-author\",\n                  children: article.authorName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, article.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LatestGrid, \"I+TBau6Do6Zhg0S2AV2a4Mm3uIs=\");\n_c = LatestGrid;\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\nexport default LatestGrid;\nvar _c;\n$RefreshReg$(_c, \"LatestGrid\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchCategoryDetails","fetchUserDetails","jsxDEV","_jsxDEV","LatestGrid","_s","latestPosts","setLatestPosts","loading","setLoading","error","setError","loadPosts","response","fetch","data","json","Array","isArray","postsWithDetails","Promise","all","slice","map","post","userData","user","categoryResponses","categories","categoryId","category","id","name","authorName","username","Error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","article","href","title","truncateText","short_description","_c","text","maxWords","words","split","length","join","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/Component/grid/LatestGrid.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport './LatestGrid.css';\nimport { fetchCategoryDetails, fetchUserDetails } from '../../Services/apiService';\n\nconst LatestGrid = () => {\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/apis/posts/');\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          const postsWithDetails = await Promise.all(data.slice(0, 3).map(async (post) => {\n            const userData = await fetchUserDetails(post.user);\n            \n            const categoryResponses = await Promise.all(\n              post.categories.map(categoryId => fetchCategoryDetails(categoryId))\n            );\n\n            const categories = categoryResponses.map(category => ({\n              id: category.id,\n              name: category.name\n            }));\n\n            return { ...post, authorName: userData.username, categories };\n          }));\n          setLatestPosts(postsWithDetails);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    loadPosts();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error.message}</p>;\n\n  return (\n    <section className=\"forYou\">\n        \n      <div className=\"container Glat\">\n      <h5 className='gridhead'>Latest</h5>\n        <div className=\"forYourow\">\n          {latestPosts.map((article) => (\n            <div className='gridbd'>\n            <div key={article.id} className=\"col-md-12 mb-4 \">\n              \n              <div className=\"CardLatestGrid\">\n               \n                \n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    <h2 className='foryoutitle' href={`/articles/${article.id}`}>{article.title}</h2>\n                  </h5>\n                  <p className=\"forYoutext\">{truncateText(article.short_description, 18)}</p>\n                  \n                  <p className=\"foryou-author\">{article.authorName}</p> \n                </div>\n              </div>\n            </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\n\nexport default LatestGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}