{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/Components/latest/latest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './latest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestNews = ({\n  fetchUrl\n}) => {\n  _s();\n  const {\n    categoryId\n  } = useParams();\n  const location = useLocation();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let url;\n    if (location.pathname === \"/latest\") {\n      url = `${fetchUrl}/posts/`;\n    } else if (categoryId) {\n      url = `${fetchUrl}${categoryId}/posts/`;\n    }\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(async data => {\n      if (Array.isArray(data)) {\n        const postsWithAuthors = await Promise.all(data.slice(0, 8).map(async post => {\n          const userResponse = await fetch(`${fetchUrl}/users/${post.user}/`);\n          const userData = await userResponse.json();\n          return {\n            ...post,\n            authorName: userData.username\n          };\n        }));\n        setLatestPosts(postsWithAuthors);\n      } else {\n        throw new Error(\"Invalid data format\");\n      }\n      setLoading(false);\n    }).catch(error => {\n      if (error.message.includes('404')) {\n        setError(\"Articles not found.\"); // Handle 404 error specifically\n      } else {\n        setError(`Error loading articles: ${error.message}`);\n      }\n      setLoading(false);\n    });\n  }, [fetchUrl, categoryId, location.pathname]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"latest-news-page\",\n    children: \"zzz\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to truncate text to a specific number of words\n_s(LatestNews, \"LXwG2JwyYOEggqxKv2IanICLSGc=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = LatestNews;\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\nexport default LatestNews;\nvar _c;\n$RefreshReg$(_c, \"LatestNews\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","jsxDEV","_jsxDEV","LatestNews","fetchUrl","_s","categoryId","location","latestPosts","setLatestPosts","loading","setLoading","error","setError","url","pathname","fetch","then","response","ok","Error","status","json","data","Array","isArray","postsWithAuthors","Promise","all","slice","map","post","userResponse","user","userData","authorName","username","catch","message","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","truncateText","text","maxWords","words","split","length","join","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/Components/latest/latest.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './latest.css';\n\nconst LatestNews = ({ fetchUrl }) => {\n  const { categoryId } = useParams();\n  const location = useLocation();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    let url;\n    if (location.pathname === \"/latest\") {\n      url = `${fetchUrl}/posts/`;\n    } else if (categoryId) {\n      url = `${fetchUrl}${categoryId}/posts/`;\n    }\n  \n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(async (data) => {\n        if (Array.isArray(data)) {\n          const postsWithAuthors = await Promise.all(data.slice(0, 8).map(async (post) => {\n            const userResponse = await fetch(`${fetchUrl}/users/${post.user}/`);\n            const userData = await userResponse.json();\n            return { ...post, authorName: userData.username };\n          }));\n          setLatestPosts(postsWithAuthors);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        if (error.message.includes('404')) {\n          setError(\"Articles not found.\"); // Handle 404 error specifically\n        } else {\n          setError(`Error loading articles: ${error.message}`);\n        }\n        setLoading(false);\n      });\n  }, [fetchUrl, categoryId, location.pathname]);\n  \n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error.message}</p>;\n\n  return (\n    <section className=\"latest-news-page\">\n     zzz\n    </section>\n  );\n};\n\n// Function to truncate text to a specific number of words\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\n\nexport default LatestNews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}