{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/Component/LatestNews/LatestNews.jsx\",\n  _s = $RefreshSig$();\n// src/components/LatestNews.js\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './LatestNews.css';\nimport { fetchPosts, fetchUserDetails } from '../../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestNews = () => {\n  _s();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPostsData = async () => {\n      try {\n        const posts = await fetchPosts();\n        if (!Array.isArray(posts)) throw new Error(\"Invalid data format\");\n        const slicedPosts = posts.slice(0, 8); // Fetch only the latest 8 posts\n        const authorRequests = slicedPosts.map(post => fetchUserDetails(post.user));\n        const authors = await Promise.all(authorRequests);\n        const updatedPosts = slicedPosts.map((post, index) => ({\n          ...post,\n          author: authors[index].username // Assuming username is the field for author name\n        }));\n        setLatestPosts(updatedPosts);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPostsData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"latest-news\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: latestPosts.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 mb-4 LTLN\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Home-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.banner_path,\n              alt: article.title,\n              className: \"card-img-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"text Latest-Homepage-t\",\n                  href: `/articles/${article.id}`,\n                  children: article.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Author: \", article.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LatestNews, \"I+TBau6Do6Zhg0S2AV2a4Mm3uIs=\");\n_c = LatestNews;\nexport default LatestNews;\nvar _c;\n$RefreshReg$(_c, \"LatestNews\");","map":{"version":3,"names":["React","useEffect","useState","fetchPosts","fetchUserDetails","jsxDEV","_jsxDEV","LatestNews","_s","latestPosts","setLatestPosts","loading","setLoading","error","setError","fetchPostsData","posts","Array","isArray","Error","slicedPosts","slice","authorRequests","map","post","user","authors","Promise","all","updatedPosts","index","author","username","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","article","src","banner_path","alt","title","href","id","_c","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/Component/LatestNews/LatestNews.jsx"],"sourcesContent":["// src/components/LatestNews.js\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './LatestNews.css';\nimport { fetchPosts, fetchUserDetails } from '../../services/apiService';\n\nconst LatestNews = () => {\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPostsData = async () => {\n      try {\n        const posts = await fetchPosts();\n        if (!Array.isArray(posts)) throw new Error(\"Invalid data format\");\n\n        const slicedPosts = posts.slice(0, 8); // Fetch only the latest 8 posts\n        const authorRequests = slicedPosts.map(post =>\n          fetchUserDetails(post.user)\n        );\n        const authors = await Promise.all(authorRequests);\n\n        const updatedPosts = slicedPosts.map((post, index) => ({\n          ...post,\n          author: authors[index].username, // Assuming username is the field for author name\n        }));\n\n        setLatestPosts(updatedPosts);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPostsData();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error}</p>;\n\n  return (\n    <section className=\"latest-news\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {latestPosts.map((article) => (\n            <div key={article.id} className=\"col-md-3 mb-4 LTLN\">\n              <div className=\"Home-card\">\n                <img src={article.banner_path} alt={article.title} className=\"card-img-top\" />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    <a className=\"text Latest-Homepage-t\" href={`/articles/${article.id}`}>{article.title}</a>\n                  </h5>\n                  <p className=\"card-text\">Author: {article.author}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LatestNews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}