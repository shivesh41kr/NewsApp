{"ast":null,"code":"// src/services/apiService.js\nconst API_URL = 'http://127.0.0.1:8000/apis';\nconst fetchPostDetails = async postId => {\n  const response = await fetch(`${API_URL}/posts/${postId}/`);\n  if (!response.ok) throw new Error(`Failed to fetch post: ${response.statusText}`);\n  return response.json();\n};\nconst fetchUserDetails = async userId => {\n  const response = await fetch(`${API_URL}/users/${userId}/`);\n  if (!response.ok) throw new Error(`Failed to fetch user: ${response.statusText}`);\n  return response.json();\n};\nconst fetchCategoryDetails = async categoryId => {\n  const response = await fetch(`${API_URL}/categories/${categoryId}/`);\n  if (!response.ok) throw new Error(`Failed to fetch category: ${response.statusText}`);\n  return response.json();\n};\nconst fetchPostWithDetails = async postId => {\n  try {\n    const post = await fetchPostDetails(postId);\n    const author = await fetchUserDetails(post.user);\n    const categories = await Promise.all(post.categories.map(categoryId => fetchCategoryDetails(categoryId)));\n    return {\n      ...post,\n      author,\n      categories\n    };\n  } catch (error) {\n    throw error;\n  }\n};\nexport { fetchPostWithDetails };","map":{"version":3,"names":["API_URL","fetchPostDetails","postId","response","fetch","ok","Error","statusText","json","fetchUserDetails","userId","fetchCategoryDetails","categoryId","fetchPostWithDetails","post","author","user","categories","Promise","all","map","error"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/Services/apiService.js"],"sourcesContent":["// src/services/apiService.js\nconst API_URL = 'http://127.0.0.1:8000/apis';\n\nconst fetchPostDetails = async (postId) => {\n  const response = await fetch(`${API_URL}/posts/${postId}/`);\n  if (!response.ok) throw new Error(`Failed to fetch post: ${response.statusText}`);\n  return response.json();\n};\n\nconst fetchUserDetails = async (userId) => {\n  const response = await fetch(`${API_URL}/users/${userId}/`);\n  if (!response.ok) throw new Error(`Failed to fetch user: ${response.statusText}`);\n  return response.json();\n};\n\nconst fetchCategoryDetails = async (categoryId) => {\n  const response = await fetch(`${API_URL}/categories/${categoryId}/`);\n  if (!response.ok) throw new Error(`Failed to fetch category: ${response.statusText}`);\n  return response.json();\n};\n\nconst fetchPostWithDetails = async (postId) => {\n  try {\n    const post = await fetchPostDetails(postId);\n    const author = await fetchUserDetails(post.user);\n    const categories = await Promise.all(\n      post.categories.map(categoryId => fetchCategoryDetails(categoryId))\n    );\n    return { ...post, author, categories };\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport { fetchPostWithDetails };\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,UAAUE,MAAM,GAAG,CAAC;EAC3D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyBH,QAAQ,CAACI,UAAU,EAAE,CAAC;EACjF,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EACzC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,UAAUU,MAAM,GAAG,CAAC;EAC3D,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyBH,QAAQ,CAACI,UAAU,EAAE,CAAC;EACjF,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMG,oBAAoB,GAAG,MAAOC,UAAU,IAAK;EACjD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,eAAeY,UAAU,GAAG,CAAC;EACpE,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6BH,QAAQ,CAACI,UAAU,EAAE,CAAC;EACrF,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMK,oBAAoB,GAAG,MAAOX,MAAM,IAAK;EAC7C,IAAI;IACF,MAAMY,IAAI,GAAG,MAAMb,gBAAgB,CAACC,MAAM,CAAC;IAC3C,MAAMa,MAAM,GAAG,MAAMN,gBAAgB,CAACK,IAAI,CAACE,IAAI,CAAC;IAChD,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAG,CAClCL,IAAI,CAACG,UAAU,CAACG,GAAG,CAACR,UAAU,IAAID,oBAAoB,CAACC,UAAU,CAAC,CACpE,CAAC;IACD,OAAO;MAAE,GAAGE,IAAI;MAAEC,MAAM;MAAEE;IAAW,CAAC;EACxC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAASR,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}