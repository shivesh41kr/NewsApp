{"ast":null,"code":"var _jsxFileName = \"/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/Components/latest/latest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './latest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestNews = ({\n  fetchUrl\n}) => {\n  _s();\n  const {\n    categoryId\n  } = useParams();\n  const location = useLocation();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theLatest, setTheLatest] = useState(\"\");\n  const [pageTitle, setPageTitle] = useState(\"\");\n  useEffect(() => {\n    let url;\n    let latest;\n    let t;\n    if (location.pathname === \"/latest\") {\n      url = `${fetchUrl}/posts/`;\n      latest = \"Latest\";\n    } else if (categoryId) {\n      url = `${fetchUrl}${categoryId}/posts/`;\n      latest = \"Category\";\n      fetch(url).then(response => response.json()).then(categoryData => {\n        setPageTitle(`${categoryData.pageTitle} Posts`);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    }\n    setTheLatest(latest);\n    if (location.pathname === \"/latest\") {\n      fetch(url).then(response => response.json()).then(async data => {\n        if (Array.isArray(data)) {\n          const postsWithAuthors = await Promise.all(data.map(async post => {\n            const userResponse = await fetch(`${fetchUrl}/users/${post.user}/`);\n            const userData = await userResponse.json();\n            return {\n              ...post,\n              authorName: userData.username\n            };\n          }));\n          setLatestPosts(postsWithAuthors);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n        setLoading(false);\n      });\n    } else {\n      fetch(url).then(response => response.json()).then(data => {\n        if (Array.isArray(data.posts)) {\n          // Map through each post to fetch additional author details\n          const postsWithAuthors = data.posts.map(async post => {\n            const userResponse = await fetch(`http://127.0.0.1:8000/apis/users/${post.user}/`);\n            const userData = await userResponse.json();\n            post.banner_path = `${'http://127.0.0.1:8000/'}${post.banner_path}`;\n            return {\n              ...post,\n              authorName: userData.username\n            }; // Replace user ID with username\n          });\n          Promise.all(postsWithAuthors).then(postsWithAuthorsData => {\n            setLatestPosts(postsWithAuthorsData.slice(0, 8)); // Set the first 8 posts directly\n            setLoading(false);\n          });\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    }\n  }, [fetchUrl, categoryId, location.pathname]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error loading articles: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"latest-news-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"thelatest\",\n        children: theLatest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: latestPosts.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latestp\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Latestc\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.banner_path,\n              alt: article.title,\n              className: \"card-img-top latestimg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"text\",\n                  href: `/articles/${article.id}`,\n                  children: article.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"latest-author\",\n                children: [\"Author: \", article.authorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"latestptext\",\n                children: truncateText(article.short_description, 50)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, article.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to truncate text to a specific number of words\n_s(LatestNews, \"bZHMMKIu/TQWsSGqH73Lut8piIo=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = LatestNews;\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\nexport default LatestNews;\nvar _c;\n$RefreshReg$(_c, \"LatestNews\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useLocation","jsxDEV","_jsxDEV","LatestNews","fetchUrl","_s","categoryId","location","latestPosts","setLatestPosts","loading","setLoading","error","setError","theLatest","setTheLatest","pageTitle","setPageTitle","url","latest","t","pathname","fetch","then","response","json","categoryData","catch","data","Array","isArray","postsWithAuthors","Promise","all","map","post","userResponse","user","userData","authorName","username","Error","posts","banner_path","postsWithAuthorsData","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","article","src","alt","title","href","id","truncateText","short_description","_c","text","maxWords","words","split","length","join","$RefreshReg$"],"sources":["/home/shivesh-kumar/Desktop/django_news/Front-End/src/jsx/Components/latest/latest.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './latest.css';\n\nconst LatestNews = ({ fetchUrl }) => {\n  const { categoryId } = useParams();\n  const location = useLocation();\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theLatest, setTheLatest] = useState(\"\");\n  const [pageTitle, setPageTitle] = useState(\"\");\n\n  useEffect(() => {\n    let url;\n    let latest;\n    let t;\n    if (location.pathname === \"/latest\") {\n      url = `${fetchUrl}/posts/`;\n      latest = \"Latest\";\n    } else if (categoryId) {\n      url = `${fetchUrl}${categoryId}/posts/`;\n      latest = \"Category\";\n      fetch(url)\n      .then((response) => response.json())\n        .then((categoryData) => {\n          setPageTitle(`${categoryData.pageTitle} Posts`);\n        })\n        .catch((error) => {\n          setError(error);\n          setLoading(false);\n        });\n    }\n\n    setTheLatest(latest);\n    if (location.pathname === \"/latest\"){\n\n    fetch(url)\n      .then((response) => response.json())\n      \n      .then(async (data) => {\n        if (Array.isArray(data)) {\n          const postsWithAuthors = await Promise.all(data.map(async (post) => {\n            const userResponse = await fetch(`${fetchUrl}/users/${post.user}/`);\n            const userData = await userResponse.json();\n            return { ...post, authorName: userData.username };\n          }));\n          setLatestPosts(postsWithAuthors);\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n        setLoading(false);\n      })\n    }\n    else{\n      fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (Array.isArray(data.posts)) {\n          // Map through each post to fetch additional author details\n          const postsWithAuthors = data.posts.map(async (post) => {\n            const userResponse = await fetch(`http://127.0.0.1:8000/apis/users/${post.user}/`);\n            const userData = await userResponse.json();\n            post.banner_path = `${'http://127.0.0.1:8000/'}${post.banner_path}`; \n            return { ...post, authorName: userData.username }; // Replace user ID with username\n          });\n          \n          Promise.all(postsWithAuthors).then((postsWithAuthorsData) => {\n            setLatestPosts(postsWithAuthorsData.slice(0, 8)); // Set the first 8 posts directly\n            setLoading(false);\n          });\n        } else {\n          throw new Error(\"Invalid data format\");\n        }\n      })\n    \n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n}}, [fetchUrl, categoryId, location.pathname]);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error loading articles: {error.message}</p>;\n\n  return (\n    <section className=\"latest-news-page\">\n      <div className=\"container\">\n        <h1 className='thelatest'>{theLatest}</h1>\n        <div className=\"row\">\n          {latestPosts.map((article) => (\n            <div key={article.id} className=\"latestp\">\n              <div className=\"Latestc\">\n                <img src={article.banner_path} alt={article.title} className=\"card-img-top latestimg\" />\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    <a className='text' href={`/articles/${article.id}`}>{article.title}</a>\n                  </h5>\n                  <p className=\"latest-author\">Author: {article.authorName}</p>\n                  <p className=\"latestptext\">{truncateText(article.short_description, 50)}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\n// Function to truncate text to a specific number of words\nfunction truncateText(text, maxWords) {\n  const words = text.split(' ');\n  if (words.length > maxWords) {\n    return words.slice(0, maxWords).join(' ') + '...';\n  }\n  return text;\n}\n\nexport default LatestNews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}